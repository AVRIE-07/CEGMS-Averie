import React, { useState } from "react";
import Sidebar from "../SidebarComponents/Sidebar";
import styles from "./Storage.module.css";
import { Link } from "react-router-dom";
import { Dropdown, Button, Modal } from "react-bootstrap";
import { BsFillPrinterFill } from "react-icons/bs"; // Import the printer icon

// Helper function to get today's date in yyyy-mm-dd format
const getCurrentDate = () => {
  const today = new Date();
  return today.toISOString().split("T")[0];
};

// Helper function to get a date a week from today in yyyy-mm-dd format
const getOneWeekLaterDate = () => {
  const today = new Date();
  const oneWeekLater = new Date(today.setDate(today.getDate() + 7));
  return oneWeekLater.toISOString().split("T")[0];
};

const Reports = () => {
  const [searchReportID, setSearchReportID] = useState("");
  const [searchReportType, setSearchReportType] = useState("");
  const [searchGeneratedBy, setSearchGeneratedBy] = useState("");
  const [searchDateGenerated, setSearchDateGenerated] = useState("");
  const [startDate, setStartDate] = useState(getCurrentDate());
  const [endDate, setEndDate] = useState(getOneWeekLaterDate());
  const [reportType, setReportType] = useState("");
  const [generatedBy, setGeneratedBy] = useState("");
  const [dateGenerated, setDateGenerated] = useState(getCurrentDate());
  const [datePeriod, setDatePeriod] = useState("");
  const [reportDetails, setReportDetails] = useState("");
  const [comment, setComment] = useState("");
  const [showModal, setShowModal] = useState(false);
  const [selectedReport, setSelectedReport] = useState("");
  const [selectedReportType, setSelectedReportType] = useState("");

  const reportTypes = ["Refunded", "Sold", "Accepted"];

  const handleShowModal = () => setShowModal(true);
  const handleCloseModal = () => setShowModal(false);
  // State for modal and report generation
  const [showGenerateModal, setShowGenerateModal] = useState(false);

  // Function to handle closing the generate report modal
  const handleCloseGenerateModal = () => {
    setShowGenerateModal(false);
    // Reset the form fields
    setReportType("");
    setGeneratedBy("");
    setDateGenerated(getCurrentDate());
    setDatePeriod("");
    setReportDetails("");
    setComment("");
  };

  const reportsData = [
    {
      id: "R001",
      type: "Inventory",
      generatedBy: "Alice Smith",
      dateGenerated: "01/10/2024",
      details: "Overview of current inventory levels.",
      refunded: 5, // Example value
      sold: 10, // Example value
      accepted: 8, // Example value
      comment: "No issues reported", // Example value
    },
    {
      id: "R002",
      type: "Sales",
      generatedBy: "Bob Johnson",
      dateGenerated: "02/10/2024",
      details: "Sales summary for the month of September.",
      refunded: 2, // Example value
      sold: 15, // Example value
      accepted: 13, // Example value
      comment: "Sales increased compared to last month", // Example value
    },
    {
      id: "R003",
      type: "Returns",
      generatedBy: "Charlie Brown",
      dateGenerated: "03/10/2024",
      details: "Details of returned items in the last week.",
      refunded: 3, // Example value
      sold: 4, // Example value
      accepted: 3, // Example value
      comment: "Returned items accounted correctly", // Example value
    },
  ];

  const filteredReports = reportsData.filter(
    (report) => !selectedReportType || report.type === selectedReportType // Filter by selected type
  );

  // Print function
  const handlePrint = (report) => {
    const printContent = `
  <div style="font-family: 'Arial', sans-serif; line-height: 1.5; padding: 20px;">
    <div style="display: flex; align-items: center; justify-content: center; margin-bottom: 20px;">
      <div style="text-align: center;">
        <h1 style="color: #007bff; margin: 5px 0;">Cokins Everywear & General Merchandise</h1>
        <p style="font-size: 14px; color: #666;">Generated on: ${new Date().toLocaleDateString()}</p>
      </div>
    </div>
    <hr style="border: 1px solid #007bff; width: 80%; margin: 10px auto;">
    <div style="padding: 15px; border: 1px solid #ccc; border-radius: 5px;">
      <h2 style="color: #333;">Report Details</h2>
      <p style="font-size: 16px;"><strong>Report ID:</strong> ${report.id}</p>
      <p style="font-size: 16px;"><strong>Report Type:</strong> ${
        report.type
      }</p>
      <p style="font-size: 16px;"><strong>Generated By:</strong> ${
        report.generatedBy
      }</p>
      <p style="font-size: 16px;"><strong>Date Generated:</strong> ${
        report.dateGenerated
      }</p>
      <h3 style="color: #333;">Details:</h3>
      <p style="font-size: 16px;">${report.details}</p>
    </div>
    <footer style="margin-top: 20px; text-align: center; color: #666;">
      <hr style="border: 1px solid #ccc; width: 80%; margin: 10px auto;">
      <p style="font-size: 14px;">Generated by Cokins</p>
      <p style="font-size: 14px;">Contact: Cokins@gmail.com</p>
    </footer>
  </div>
`;

    const newWindow = window.open("", "_blank");
    newWindow.document.write(`
    <html>
      <head>
        <title>Print Report</title>
        <style>
          body { font-family: 'Arial', sans-serif; margin: 0; padding: 0; }
          h1 { color: #007bff; margin-bottom: 5px; }
          p { font-size: 16px; }
          footer { margin-top: 20px; text-align: center; color: #666; }
          hr { border: 1px solid #ccc; }
        </style>
      </head>
      <body>${printContent}</body>
    </html>
  `);
    newWindow.document.close();
    newWindow.print();
  };

  return (
    <div className={styles.dashboard}>
      <Sidebar />
      <main className={styles.mainContent} style={{ width: "100%" }}>
        <div className="d-flex justify-content-start">
          <ul className="nav nav-underline fs-6 me-3">
            <li className="nav-item pe-3">
              <Link
                to="/Storage"
                className="nav-link fw-semibold text-decoration-none"
                style={{ color: "#6a6d71" }}
              >
                Products
              </Link>
            </li>
            <li className="nav-item pe-3">
              <Link
                to="/Storage/StockMovement"
                className="nav-link fw-semibold text-decoration-none"
                style={{ color: "#6a6d71" }}
              >
                Stock Movement
              </Link>
            </li>
            <li className="nav-item">
              <Link
                to="/Storage/Reports"
                className="nav-link fw-semibold text-decoration-none border-bottom border-primary border-2"
              >
                Reports
              </Link>
            </li>
          </ul>
        </div>
        <div className="card shadow-sm py-3 px-4 mb-3">
          <div className="d-flex justify-content-between align-items-center">
            <div className="d-flex align-items-center">
              <i className="bi bi-bar-chart-fill fs-3"></i>
              <h5 className="fw-semibold ms-3 mb-0">Storage</h5>
            </div>
            <div>
              <Button onClick={() => setShowGenerateModal(true)}>
                + Generate Report
              </Button>
            </div>
          </div>
        </div>
        <div
          className="card shadow-sm px-4 py-1"
          style={{ backgroundColor: "#50504D" }}
        >
          <div className="d-flex align-items-center" style={{ height: "50px" }}>
            <Dropdown>
              <Dropdown.Toggle variant="secondary" id="dropdown-basic">
                Report Type Filter
              </Dropdown.Toggle>
              <Dropdown.Menu>
                <Dropdown.Item eventKey="">All Reports</Dropdown.Item>
                <Dropdown.Item eventKey="Inventory">Inventory</Dropdown.Item>
                <Dropdown.Item eventKey="Sales">Sales</Dropdown.Item>
                <Dropdown.Item eventKey="Returns">Returns</Dropdown.Item>
              </Dropdown.Menu>
            </Dropdown>
          </div>
        </div>
        <div className="card shadow-sm px-4 py-3">
          <div className="row mb-3 g-3">
            <div className="col">
              <label htmlFor="searchReportID" style={{ fontSize: 13 }}>
                Report ID
              </label>
              <input
                type="text"
                id="searchReportID"
                className="form-control"
                value={searchReportID}
                onChange={(e) => setSearchReportID(e.target.value)}
                style={{ borderColor: "blue", borderRadius: 50 }}
                placeholder="Report ID"
              />
            </div>
            <div className="col">
              <label htmlFor="searchReportType" style={{ fontSize: 13 }}>
                Report Type
              </label>
              <input
                type="text"
                id="searchReportType"
                className="form-control"
                value={searchReportType}
                onChange={(e) => setSearchReportType(e.target.value)}
                style={{ borderColor: "blue", borderRadius: 50 }}
                placeholder="Type"
              />
            </div>
            <div className="col">
              <label htmlFor="searchGeneratedBy" style={{ fontSize: 13 }}>
                Generated By
              </label>
              <input
                type="text"
                id="searchGeneratedBy"
                className="form-control"
                value={searchGeneratedBy}
                onChange={(e) => setSearchGeneratedBy(e.target.value)}
                style={{ borderColor: "blue", borderRadius: 50 }}
                placeholder="Name"
              />
            </div>
            <div className="col">
              <label htmlFor="searchDateGenerated" style={{ fontSize: 13 }}>
                Date Generated
              </label>
              <input
                type="date"
                id="searchDateGenerated"
                className="form-control"
                value={searchDateGenerated}
                onChange={(e) => setSearchDateGenerated(e.target.value)}
                style={{ borderColor: "blue", borderRadius: 50 }}
              />
            </div>
            <div className="col">
              <label htmlFor="startDate" style={{ fontSize: 13 }}>
                Start Date
              </label>
              <input
                type="date"
                id="startDate"
                className="form-control"
                value={startDate}
                onChange={(e) => setStartDate(e.target.value)}
                style={{ borderColor: "blue", borderRadius: 50 }}
              />
            </div>
            <div className="col">
              <label htmlFor="endDate" style={{ fontSize: 13 }}>
                End Date
              </label>
              <input
                type="date"
                id="endDate"
                className="form-control"
                value={endDate}
                onChange={(e) => setEndDate(e.target.value)}
                style={{ borderColor: "blue", borderRadius: 50 }}
              />
            </div>
          </div>

          <div className="table-responsive">
            <table className="table table-hover border-top">
              <thead className="table-info">
                <tr>
                  <th scope="col" className="fw-semibold">
                    Report Type
                  </th>
                  <th scope="col" className="fw-semibold">
                    Refunded
                  </th>
                  <th scope="col" className="fw-semibold">
                    Sold
                  </th>
                  <th scope="col" className="fw-semibold">
                    Accepted
                  </th>
                  <th scope="col" className="fw-semibold">
                    Date Period
                  </th>
                  <th scope="col" className="fw-semibold">
                    Report Details
                  </th>
                  <th scope="col" className="fw-semibold">
                    Comment
                  </th>
                  <th scope="col" className="fw-semibold">
                    Print
                  </th>
                </tr>
              </thead>
              <tbody className="fs-6 align-middle table-group-divider">
                {filteredReports.map((report) => (
                  <tr
                    key={report.id}
                    onClick={() => handleShowModal(report)}
                    style={{ cursor: "pointer" }}
                  >
                    <td className="text-primary">{report.type}</td>
                    <td className="text-primary">{report.refunded}</td>
                    <td className="text-primary">{report.sold}</td>
                    <td className="text-primary">{report.accepted}</td>
                    <td className="text-primary">
                      {startDate} - {endDate}
                    </td>
                    <td className="text-primary">{report.details}</td>
                    <td className="text-primary">{report.comment}</td>
                    <td className="text-primary">
                      <span
                        onClick={(e) => {
                          e.stopPropagation(); // Prevent triggering row click
                          handlePrint(report); // Call the print function
                        }}
                        style={{ cursor: "pointer", fontSize: "1.3rem" }} // Increase font size
                      >
                        <BsFillPrinterFill />
                      </span>
                    </td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        </div>
        <Modal show={showGenerateModal} onHide={handleCloseGenerateModal}>
          <Modal.Header closeButton>
            <Modal.Title>Generate Report</Modal.Title>
          </Modal.Header>
          <Modal.Body>
            <h6>Report Type:</h6>
            {reportTypes.map((type) => (
              <div key={type}>
                <input
                  type="checkbox"
                  value={type}
                  checked={reportType.includes(type)} // Check if type is in the selected array
                  onChange={() => {
                    // Update the selected report types array
                    if (reportType.includes(type)) {
                      setReportType(reportType.filter((t) => t !== type)); // Remove type if already selected
                    } else {
                      setReportType([...reportType, type]); // Add type if not selected
                    }
                  }}
                />
                {type}
              </div>
            ))}
            <br />
            <h6>Date Period:</h6>
            <div className="row mb-3">
              {" "}
              {/* Added row for Bootstrap grid */}
              <div className="col">
                <label htmlFor="startDate" style={{ fontSize: 13 }}>
                  Start Date
                </label>
                <input
                  type="date"
                  id="startDate"
                  className="form-control"
                  value={startDate}
                  onChange={(e) => setStartDate(e.target.value)}
                  style={{ borderColor: "blue", borderRadius: 50 }}
                />
              </div>
              <div className="col">
                <label htmlFor="endDate" style={{ fontSize: 13 }}>
                  End Date
                </label>
                <input
                  type="date"
                  id="endDate"
                  className="form-control"
                  value={endDate}
                  onChange={(e) => setEndDate(e.target.value)}
                  style={{ borderColor: "blue", borderRadius: 50 }}
                />
              </div>
            </div>
            <h6>Report Details:</h6>
            <textarea
              value={reportDetails}
              onChange={(e) => setReportDetails(e.target.value)}
              placeholder="Add report details here..."
              className="form-control" // Added Bootstrap class
              rows={3} // Optional: to set a fixed height
            />
            <h6>Comment:</h6>
            <textarea
              value={comment}
              onChange={(e) => setComment(e.target.value)}
              placeholder="Add any comments here..."
              className="form-control" // Added Bootstrap class
              rows={3} // Optional: to set a fixed height
            />
          </Modal.Body>
          <Modal.Footer>
            <Button
              variant="primary"
              onClick={() => {
                // Handle report generation logic here
                console.log("Report generated for type:", reportType);
                handleCloseGenerateModal();
              }}
            >
              Generate
            </Button>
          </Modal.Footer>
        </Modal>
      </main>
    </div>
  );
};

export default Reports;
